{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Add.js","components/Edit.js","App.js","reportWebVitals.js","redux/reducers/ContactRedcer.js","Store.js","index.js"],"names":["Navbar","className","to","Home","contacts","useSelector","state","dispatch","useDispatch","useState","searchInput","setSearchInput","contactData","setContactData","type","onChange","event","target","value","filteredData","filter","contact","name","toLowerCase","includes","placeholder","scope","map","id","phone","email","onClick","payload","toast","success","deleteContact","Add","setName","setPhone","setEmail","history","useHistory","onSubmit","preventDefault","checkEmail","find","checkPhone","warning","error","data","length","push","Edit","useParams","currentContact","parseInt","useEffect","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ContactReducer","action","updatedState","fiteredContact","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","composeWithDevTools","subscribe","stringify","setItem","saveTOLocalStorage","getState","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"gNAWeA,EATA,WACb,OACE,qBAAKC,UAAU,mDAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oBAAvB,wC,sBC0FSE,EA3FF,WACX,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,KAClCC,EAAWC,cAKjB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAASL,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAiBA,OACE,qBAAKZ,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,cAAC,IAAD,CAAMC,GAAG,mBAAmBD,UAAU,8BAAtC,2BAIF,qBAAKA,UAAU,cAAf,SACE,uBACEa,KAAK,OACLb,UAAU,eACVc,SA5Bc,SAACC,GACvBL,EAAeK,EAAMC,OAAOC,OAG5B,IAAIC,EAAeP,EAAYQ,QAAO,SAACC,GACrC,MAAoB,KAAhBX,GAGGW,EAAQC,KAAKC,cAAcC,SAASd,EAAYa,kBAE9B,KAAvBP,EAAMC,OAAOC,MACfL,EAAeM,GAEfN,EAAeT,IAgBTc,MAAOR,EACPe,YAAY,gBAGhB,sBAAKxB,UAAU,mBAAf,UACE,2DACA,wBAAOA,UAAU,QAAjB,UACE,uBAAOA,UAAU,oBAAjB,SACE,+BACE,oBAAIyB,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGd,EAAYe,KAAI,SAACN,EAASO,GACzB,OACE,+BACE,6BAAKA,EAAK,IACV,6BAAKP,EAAQC,OACb,6BAAKD,EAAQQ,QACb,6BAAKR,EAAQS,QACb,6BACE,sBAAK7B,UAAU,aAAf,UACE,cAAC,IAAD,CACEC,GAAE,4BAAuBmB,EAAQO,IACjC3B,UAAU,kCAFZ,kBAMA,wBACEa,KAAK,SACLb,UAAU,2BACV8B,QAAS,YAtEX,SAACH,GACrBrB,EAAS,CAAEO,KAAM,iBAAkBkB,QAASJ,IAC5CK,IAAMC,QAAQ,gCAqEUC,CAAcd,EAAQO,KAJ1B,2BAbGP,EAAQO,qBCmCpBQ,EA3FH,WACV,IAAMhC,EAAWC,aAAY,SAACC,GAAD,OAAWA,KACxC,EAAwBG,mBAAS,IAAjC,mBAAOa,EAAP,KAAae,EAAb,KACA,EAA0B5B,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcS,EAAd,KACA,EAA0B7B,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcS,EAAd,KACMhC,EAAWC,cACXgC,EAAUC,cAyChB,OACE,qBAAKxC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,wBAAd,yBACA,qBAAKA,UAAU,2CAAf,SACE,uBAAMyC,SAnCO,SAAC1B,GACpBA,EAAM2B,iBACN,IAAMC,EAAaxC,EAASyC,MAAK,SAAUxB,GACzC,OAAOA,EAAQS,QAAUA,GAASA,KAE9BgB,EAAa1C,EAASyC,MAAK,SAAUxB,GACzC,OAAOA,EAAQQ,QAAUA,GAASA,KAGpC,IAAKC,IAAUD,IAAUP,EACvB,OAAOW,IAAMc,QAAQ,8BAEvB,GAAIH,EACF,OAAOX,IAAMe,MAAM,6BAErB,GAAIF,EACF,OAAOb,IAAMe,MAAM,iCAErB,IAAMC,EAAO,CACXrB,GAAIxB,EAASA,EAAS8C,OAAS,GAAGtB,GAAK,EACvCN,OACAO,QACAC,SAGFvB,EAAS,CAAEO,KAAM,cAAekB,QAASiB,IACzChB,IAAMC,QAAQ,+BACdM,EAAQW,KAAK,iBAQP,UACE,qBAAKlD,UAAU,kBAAf,SACE,uBACEa,KAAK,OACLW,YAAY,aACZxB,UAAU,eACViB,MAAOI,EACPP,SApDO,SAACC,GACpBqB,EAAQrB,EAAMC,OAAOC,YAsDb,qBAAKjB,UAAU,kBAAf,SACE,uBACEa,KAAK,OACLW,YAAY,iBACZxB,UAAU,eACViB,MAAOW,EACPd,SA1DQ,SAACC,GACrBsB,EAAStB,EAAMC,OAAOC,YA4Dd,qBAAKjB,UAAU,kBAAf,SACE,uBACEa,KAAK,QACLW,YAAY,iBACZxB,UAAU,eACViB,MAAOY,EACPf,SAhEQ,SAACC,GACrBuB,EAASvB,EAAMC,OAAOC,YAkEd,qBAAKjB,UAAU,kBAAf,SACE,wBAAQa,KAAK,SAASb,UAAU,4BAAhC,sCC6BCmD,EA7GF,WACX,IAAQxB,EAAOyB,cAAPzB,GACFxB,EAAWC,aAAY,SAACC,GAAD,OAAWA,KAClCC,EAAWC,cACXgC,EAAUC,cACVa,EAAiBlD,EAASyC,MAAK,SAAUxB,GAC7C,OAAOA,EAAQO,KAAO2B,SAAS3B,MAEjC,EAAwBnB,mBAAS,IAAjC,mBAAOa,EAAP,KAAae,EAAb,KACA,EAA0B5B,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcS,EAAd,KACA,EAA0B7B,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcS,EAAd,KAEAiB,qBAAU,WACJF,IACFjB,EAAQiB,EAAehC,MACvBiB,EAASe,EAAexB,OACxBQ,EAASgB,EAAezB,UAEzB,CAACyB,IAsCJ,OACE,qBAAKrD,UAAU,YAAf,SACGqD,EACC,mCACE,sBAAKrD,UAAU,MAAf,UACE,qBAAIA,UAAU,wBAAd,0BAAoD2B,KACpD,qBAAK3B,UAAU,2CAAf,SACE,uBAAMyC,SAnCG,SAAC1B,GACpBA,EAAM2B,iBACN,IAAMC,EAAaxC,EAASyC,MAAK,SAAUxB,GACzC,OAAOA,EAAQO,KAAO2B,SAAS3B,IAAOP,EAAQS,QAAUA,KAEpDgB,EAAa1C,EAASyC,MAAK,SAAUxB,GACzC,OAAOA,EAAQO,KAAO2B,SAAS3B,IAAOP,EAAQQ,QAAUA,GAASA,KAGnE,IAAKC,IAAUD,IAAUP,EACvB,OAAOW,IAAMc,QAAQ,8BAEvB,GAAIH,EACF,OAAOX,IAAMe,MAAM,gCAErB,GAAIF,EACF,OAAOb,IAAMe,MAAM,mCAErB,IAAMC,EAAO,CACXrB,GAAI2B,SAAS3B,GACbN,OACAO,QACAC,SAEFvB,EAAS,CAAEO,KAAM,iBAAkBkB,QAASiB,IAC5ChB,IAAMC,QAAQ,iCACdM,EAAQW,KAAK,iBASH,UACE,qBAAKlD,UAAU,kBAAf,SACE,uBACEa,KAAK,OACLW,YAAY,aACZxB,UAAU,eACVc,SAlDG,SAACC,GACpBqB,EAAQrB,EAAMC,OAAOC,QAkDLA,MAAOI,MAGX,qBAAKrB,UAAU,kBAAf,SACE,uBACEa,KAAK,OACLW,YAAY,iBACZxB,UAAU,eACVc,SAxDI,SAACC,GACrBsB,EAAStB,EAAMC,OAAOC,QAwDNA,MAAOW,MAGX,qBAAK5B,UAAU,kBAAf,SACE,uBACEa,KAAK,QACLW,YAAY,iBACZxB,UAAU,eACVc,SA9DI,SAACC,GACrBuB,EAASvB,EAAMC,OAAOC,QA8DNA,MAAOY,MAGX,sBAAK7B,UAAU,mBAAf,UACE,wBAAQa,KAAK,SAASb,UAAU,oBAAhC,oBAGA,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,iBAAlC,iCASV,mDAAsB2B,EAAtB,wBCrFO6B,MAlBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,IAAD,IAEA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyD,KAAK,gBAAgBC,OAAK,EAACC,UAAWzD,IAC7C,cAAC,IAAD,CAAOuD,KAAK,mBAAmBE,UAAWxB,IAE1C,cAAC,IAAD,CAAOsB,KAAK,wBAAwBE,UAAWR,aCN1CS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCPRQ,EAAe,CACnB,CACE1C,GAAI,EACJN,KAAM,uBACNO,MAAO,YACPC,MAAO,sBAET,CACEF,GAAI,EACJN,KAAM,YACNO,MAAO,UACPC,MAAO,mBA6BIyC,EAzBQ,WAAmC,IAAlCjE,EAAiC,uDAAzBgE,EAAcE,EAAW,uCACvD,OAAQA,EAAO1D,MACb,IAAK,cAEH,OADAR,EAAK,sBAAOA,GAAP,CAAckE,EAAOxC,UAE5B,IAAK,iBACH,IAAMyC,EAAenE,EAAMqB,KAAI,SAACN,GAC9B,OAAIA,EAAQO,KAAO4C,EAAOxC,QAAQJ,GACzB4C,EAAOxC,QAEPX,KAIX,OADAf,EAAQmE,EAEV,IAAK,iBACH,IAAMC,EAAiBpE,EAAMc,QAAO,SAACC,GACnC,OAAOA,EAAQO,KAAO4C,EAAOxC,WAG/B,OADA1B,EAAQoE,EAEV,QACE,OAAOpE,ICbb,IAAMqE,EAAQC,sBACZL,EAZF,WACE,IACE,IAAMM,EAAkBC,aAAaC,QAAQ,mBAC7C,GAAuB,MAAnBF,EAAyB,OAC7B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GAEP,YADAC,QAAQC,KAAKF,IAOfG,GACAC,iCAEFX,EAAMY,WAAU,kBAzBhB,SAA4BjF,GAC1B,IACE,IAAMuE,EAAkBG,KAAKQ,UAAUlF,GACvCwE,aAAaW,QAAQ,kBAAmBZ,GACxC,MAAOK,GACPC,QAAQC,KAAKF,IAoBKQ,CAAmBf,EAAMgB,eAChChB,QCpBfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnB,MAAOoB,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.c0949590.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark py-2\">\r\n      <Link to=\"/\" className=\"navbar-brand ml-3\">\r\n        React Redux Contact App\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nconst Home = () => {\r\n  const contacts = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    toast.success(\"Contact deleted successfully\");\r\n  };\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [contactData, setContactData] = useState(contacts);\r\n  const onSearchHandler = (event) => {\r\n    setSearchInput(event.target.value);\r\n\r\n    // console.log(event.target.value);\r\n    var filteredData = contactData.filter((contact) => {\r\n      if (searchInput === \"\") {\r\n        return true;\r\n      }\r\n      return contact.name.toLowerCase().includes(searchInput.toLowerCase());\r\n    });\r\n    if (event.target.value !== \"\") {\r\n      setContactData(filteredData);\r\n    } else {\r\n      setContactData(contacts);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 text-right my-5\">\r\n          <Link to=\"/contact-app/add\" className=\"btn btn-primary add-contact\">\r\n            Add Contact\r\n          </Link>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-search\"\r\n            onChange={onSearchHandler}\r\n            value={searchInput}\r\n            placeholder=\"Search...\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <h1>React Redux contact book </h1>\r\n          <table className=\"table\">\r\n            <thead className=\"table table-hover\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Phone No</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contactData.map((contact, id) => {\r\n                return (\r\n                  <tr key={contact.id}>\r\n                    <td>{id + 1}</td>\r\n                    <td>{contact.name}</td>\r\n                    <td>{contact.phone}</td>\r\n                    <td>{contact.email}</td>\r\n                    <td>\r\n                      <div className=\"action-btn\">\r\n                        <Link\r\n                          to={`/contact-app/edit/${contact.id}`}\r\n                          className=\"btn  btn-small btn-warning mx-2\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-small btn-danger\"\r\n                          onClick={() => {\r\n                            deleteContact(contact.id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nconst Add = () => {\r\n  const contacts = useSelector((state) => state);\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const getNameInput = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const getPhoneInput = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n  const getEmailInput = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const checkEmail = contacts.find(function (contact) {\r\n      return contact.email === email && email;\r\n    });\r\n    const checkPhone = contacts.find(function (contact) {\r\n      return contact.phone === phone && phone;\r\n    });\r\n\r\n    if (!email || !phone || !name) {\r\n      return toast.warning(\"Please fill all the fields\");\r\n    }\r\n    if (checkEmail) {\r\n      return toast.error(\"This email already exists\");\r\n    }\r\n    if (checkPhone) {\r\n      return toast.error(\"This phone no. already exists\");\r\n    }\r\n    const data = {\r\n      id: contacts[contacts.length - 1].id + 1,\r\n      name,\r\n      phone,\r\n      email,\r\n    };\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n    toast.success(\"Contact added successfully!\");\r\n    history.push(\"/contact-app\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1 className=\"display-3 text-center\">Add Contact</h1>\r\n        <div className=\"col-md-6 shadow mx-auto text-center my-4\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group py-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={getNameInput}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form-group py-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Phone No\"\r\n                className=\"form-control\"\r\n                value={phone}\r\n                onChange={getPhoneInput}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form-group py-3\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter email id\"\r\n                className=\"form-control\"\r\n                value={email}\r\n                onChange={getEmailInput}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form-group py-2\">\r\n              <button type=\"submit\" className=\"btn btn-dark form-control\">\r\n                Add Contact\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Add;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Edit = () => {\r\n  const { id } = useParams();\r\n  const contacts = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const currentContact = contacts.find(function (contact) {\r\n    return contact.id === parseInt(id);\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentContact) {\r\n      setName(currentContact.name);\r\n      setEmail(currentContact.email);\r\n      setPhone(currentContact.phone);\r\n    }\r\n  }, [currentContact]);\r\n  const getNameInput = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const getPhoneInput = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n  const getEmailInput = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const checkEmail = contacts.find(function (contact) {\r\n      return contact.id !== parseInt(id) && contact.email === email;\r\n    });\r\n    const checkPhone = contacts.find(function (contact) {\r\n      return contact.id !== parseInt(id) && contact.phone === phone && phone;\r\n    });\r\n\r\n    if (!email || !phone || !name) {\r\n      return toast.warning(\"Please fill all the fields\");\r\n    }\r\n    if (checkEmail) {\r\n      return toast.error(\"This email is already exists\");\r\n    }\r\n    if (checkPhone) {\r\n      return toast.error(\"This phone no is already exists\");\r\n    }\r\n    const data = {\r\n      id: parseInt(id),\r\n      name,\r\n      phone,\r\n      email,\r\n    };\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\r\n    toast.success(\"Contact updated successfully!\");\r\n    history.push(\"/contact-app\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {currentContact ? (\r\n        <>\r\n          <div className=\"row\">\r\n            <h1 className=\"display-3 text-center\">Edit Contact {id}</h1>\r\n            <div className=\"col-md-6 shadow mx-auto text-center my-4\">\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group py-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    className=\"form-control\"\r\n                    onChange={getNameInput}\r\n                    value={name}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group py-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Phone No\"\r\n                    className=\"form-control\"\r\n                    onChange={getPhoneInput}\r\n                    value={phone}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group py-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email id\"\r\n                    className=\"form-control\"\r\n                    onChange={getEmailInput}\r\n                    value={email}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group py-2 \">\r\n                  <button type=\"submit\" className=\"btn btn-dark mx-2\">\r\n                    Update\r\n                  </button>\r\n                  <Link to=\"/contact-app\" className=\"btn btn-danger\">\r\n                    Cancel\r\n                  </Link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h1>This contact id: {id} does not exist</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Edit;\r\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Add from \"./components/Add\";\nimport Edit from \"./components/Edit\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ToastContainer />\n\n        <Navbar />\n        <Switch>\n          <Route path=\"/contact-app/\" exact component={Home} />\n          <Route path=\"/contact-app/add\" component={Add} />\n\n          <Route path=\"/contact-app/edit/:id\" component={Edit} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [\r\n  {\r\n    id: 0,\r\n    name: \"Sayantan Chakravarty\",\r\n    phone: \"123456789\",\r\n    email: \"sayantan@gmail.com\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Test Name\",\r\n    phone: 987654321,\r\n    email: \"test@gmail.com\",\r\n  },\r\n];\r\n\r\nconst ContactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CONTACT\":\r\n      state = [...state, action.payload];\r\n      return state;\r\n    case \"UPDATE_CONTACT\":\r\n      const updatedState = state.map((contact) => {\r\n        if (contact.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return contact;\r\n        }\r\n      });\r\n      state = updatedState;\r\n      return state;\r\n    case \"DELETE_CONTACT\":\r\n      const fiteredContact = state.filter((contact) => {\r\n        return contact.id !== action.payload;\r\n      });\r\n      state = fiteredContact;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ContactReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport ContactReducer from \"./redux/reducers/ContactRedcer\";\r\n\r\nfunction saveTOLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState == null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst store = createStore(\r\n  ContactReducer,\r\n  loadFromLocalStorage(),\r\n  composeWithDevTools()\r\n);\r\nstore.subscribe(() => saveTOLocalStorage(store.getState()));\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Store from \"./Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}